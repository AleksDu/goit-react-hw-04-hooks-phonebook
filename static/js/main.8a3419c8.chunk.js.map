{"version":3,"sources":["components/ContactForm/ContactForm.module.css","App.module.css","components/Filter/Filter.module.css","components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Container/Container.module.css","components/IconButton/IconButton.module.scss","components/Container/Container.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","components/IconButton/IconButton.js","icons/remove.svg","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","index.js"],"names":["module","exports","Container","children","className","s","container","defaultProps","initialState","name","number","ContactForm","contacts","onSubmit","useState","state","setState","hanldeChange","event","currentTarget","value","prev","resetForm","form","preventDefault","normalizedName","toLowerCase","nameInContacts","find","contact","numberInContacts","toast","info","label","type","placeholder","input","onChange","pattern","title","required","button__wrapper","button","Filter","IconButton","onClick","allyProps","protoTypes","PropTypes","func","node","string","isRequired","_path","_path2","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgRemove","_ref","svgRef","titleId","props","width","height","viewBox","fill","xmlns","ref","id","d","fillRule","clipRule","ForwardRef","ContactItem","onDeleteContact","styles","href","ContactList","list","map","item","localStorageContactsKey","App","setContacts","filter","setFilter","useEffect","currentContacts","JSON","parse","localStorage","getItem","setItem","stringify","newContact","filteredContacts","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8a3419c8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__294Gu\",\"label\":\"ContactForm_label__3ZsY1\",\"input\":\"ContactForm_input__2s0Fx\",\"button__wrapper\":\"ContactForm_button__wrapper__Z8oUI\",\"button\":\"ContactForm_button__3fiMu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"App_title__1gpzx\",\"close\":\"App_close__2oxR1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"Filter_label__3ccji\",\"input\":\"Filter_input__2zGJa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"name\":\"ContactItem_name__3ccC5\",\"number\":\"ContactItem_number__2OPTN\",\"button\":\"ContactItem_button__3Svqp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ContactList_list__1rI8j\",\"item\":\"ContactList_item__1Kpy1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Container_container__1rw7q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"IconButton\":\"IconButton_IconButton__30_xU\"};","import PropTypes from \"prop-types\";\nimport s from \"./Container.module.css\";\n\nconst Container = ({ children }) => (\n  <div className={s.container}>{children}</div>\n);\n\nContainer.defaultProps = {\n  children: [],\n};\n\nContainer.propTypes = {\n  children: PropTypes.node,\n};\n\nexport default Container;\n","import { useState } from \"react\";\nimport { toast } from \"react-toastify\";\nimport PropTypes from \"prop-types\";\n// import { v4 as uuidv4 } from 'uuid';\n\nimport s from \"./ContactForm.module.css\";\n\nconst initialState = {\n  name: \"\",\n  number: \"\",\n};\n\nconst ContactForm = ({ contacts, onSubmit }) => {\n  const [state, setState] = useState(initialState);\n  const { name, number } = state;\n\n  // Следит за инпутом\n  const hanldeChange = (event) => {\n    const { name, value } = event.currentTarget;\n\n    setState((prev) => ({\n      ...prev,\n      [name]: value,\n    }));\n  };\n\n  // Метод на отправке формы. Формирует из стейта контакт и передает во внешний метод\n  const hanldeSubmit = (event) => {\n    event.preventDefault();\n\n    const normalizedName = name.toLowerCase();\n\n    // Проверка на дубликат по имени\n    const nameInContacts = contacts.find(\n      (contact) => contact.name === normalizedName\n    );\n\n    // Проверка на дубликат по номеру\n    const numberInContacts = contacts.find(\n      (contact) => contact.number === number\n    );\n\n    // Отправка имени и номера после проверки (в проп-метод из контейнера)\n    if (!nameInContacts && !numberInContacts) {\n      onSubmit(normalizedName, number);\n      resetForm();\n      return;\n    }\n\n    toast.info(`${name} is already in contacts`);\n  };\n\n  // Сброс полей формы (после отправки)\n  const resetForm = () => {\n    setState(initialState);\n  };\n\n  return (\n    <form className={s.form} onSubmit={hanldeSubmit}>\n      <label className={s.label}>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          placeholder=\"Contact name\"\n          aria-label=\"input to you name\"\n          className={s.input}\n          value={name}\n          onChange={hanldeChange}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n        />\n      </label>\n      <label className={s.label}>\n        Number\n        <input\n          type=\"tel\"\n          name=\"number\"\n          placeholder=\"Phone number\"\n          aria-label=\"input to you phone number\"\n          className={s.input}\n          value={number}\n          onChange={hanldeChange}\n          pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n          title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n          required\n        />\n      </label>\n      <div className={s.button__wrapper}>\n        <button type=\"submit\" className={s.button}>\n          Add contact\n        </button>\n      </div>\n    </form>\n  );\n};\nContactForm.propTypes = {\n  onSubmit: PropTypes.func.isRequired,\n};\n\nexport default ContactForm;\n","import PropTypes from \"prop-types\";\n\nimport s from \"./Filter.module.css\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <label className={s.label}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Find?\"\n        className={s.input}\n        value={value}\n        onChange={onChange}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n        required\n      />\n    </label>\n  );\n};\n\nFilter.defaultProps = {\n  value: \"\",\n};\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n\nexport default Filter;\n","import PropTypes from \"prop-types\";\nimport s from \"./IconButton.module.scss\";\n\nconst IconButton = ({ children, onClick, ...allyProps }) => (\n  <button\n    type=\"button\"\n    className={s.IconButton}\n    onClick={onClick}\n    {...allyProps}\n  >\n    {children}\n  </button>\n);\n\nIconButton.defaultProps = {\n  onClick: () => null,\n  children: null,\n};\n\nIconButton.protoTypes = {\n  onClick: PropTypes.func,\n  children: PropTypes.node,\n  \"aria-label\": PropTypes.string.isRequired,\n};\n\nexport default IconButton;\n","var _path, _path2;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgRemove(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: \"24px\",\n    height: \"24px\",\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M8 11C7.44772 11 7 11.4477 7 12C7 12.5523 7.44772 13 8 13H16C16.5523 13 17 12.5523 17 12C17 11.4477 16.5523 11 16 11H8Z\",\n    fill: \"black\"\n  })), _path2 || (_path2 = /*#__PURE__*/React.createElement(\"path\", {\n    fillRule: \"evenodd\",\n    clipRule: \"evenodd\",\n    d: \"M23 12C23 18.0751 18.0751 23 12 23C5.92487 23 1 18.0751 1 12C1 5.92487 5.92487 1 12 1C18.0751 1 23 5.92487 23 12ZM21 12C21 16.9706 16.9706 21 12 21C7.02944 21 3 16.9706 3 12C3 7.02944 7.02944 3 12 3C16.9706 3 21 7.02944 21 12Z\",\n    fill: \"black\"\n  })));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgRemove);\nexport default __webpack_public_path__ + \"static/media/remove.9c087e05.svg\";\nexport { ForwardRef as ReactComponent };","import styles from \"./ContactItem.module.css\";\nimport IconButton from \"../IconButton\";\nimport { ReactComponent as DeleteIcon } from \"../../icons/remove.svg\";\n\nconst ContactItem = ({ contact, onDeleteContact }) => {\n  return (\n    <>\n      <span className={styles.name}>{contact.name}: </span>\n      <a href={`tel:${contact.number}`} className={styles.number}>\n        {contact.number}\n      </a>\n      <IconButton onClick={onDeleteContact} aria-label=\"Delete contact\">\n        <DeleteIcon width=\"20px\" height=\"20px\" fill=\"#a9a1a1\" />\n      </IconButton>\n    </>\n  );\n};\n\nexport default ContactItem;\n","import PropTypes from \"prop-types\";\nimport ContactItem from \"../ContactItem\";\n\nimport s from \"./ContactList.module.css\";\n\nconst ContactList = ({ contacts, onDeleteContact }) => {\n  return (\n    <ul className={s.list}>\n      {contacts.map((contact) => (\n        <li className={s.item} key={contact.id}>\n          <ContactItem\n            contact={contact}\n            onDeleteContact={() => {\n              onDeleteContact(contact.id);\n            }}\n          />\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ),\n  onDeleteContact: PropTypes.func.isRequired,\n};\n\nexport default ContactList;\n","import React, { useState, useEffect } from \"react\";\nimport Container from \"./components/Container\";\nimport ContactForm from \"./components/ContactForm\";\nimport Filter from \"./components/Filter\";\nimport ContactList from \"./components/ContactList\";\n\nimport s from \"./App.module.css\";\n\nconst localStorageContactsKey = \"contacts\";\n\nconst App = () => {\n  // let contacts = [\n  //   { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\n  //   { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\n  //   { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\n  //   { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\n  // ];\n\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState(\"\");\n\n  useEffect(() => {\n    const currentContacts = JSON.parse(\n      localStorage.getItem(localStorageContactsKey)\n    );\n\n    if (currentContacts) {\n      setContacts(currentContacts);\n    }\n  }, []);\n\n  useEffect(() => {\n    localStorage.setItem(localStorageContactsKey, JSON.stringify(contacts));\n  }, [contacts]);\n\n  const handleAddContact = (newContact) =>\n    setContacts([...contacts, newContact]);\n\n  const handleFilter = (event) => setFilter(event.target.value);\n\n  const handleDelete = (id) => {\n    const filteredContacts = contacts.filter((contact) => contact.id !== id);\n\n    setContacts(filteredContacts);\n  };\n\n  return (\n    <Container>\n      <h1 className={s.title}>Phonebook</h1>\n      <ContactForm onSubmit={handleAddContact} />\n      <h2 className={s.title}>Contacts</h2>\n      <Filter value={filter} onChange={handleFilter} />\n      <ContactList contacts={contacts} onDeleteContact={handleDelete} />\n    </Container>\n  );\n};\n\nexport default App;\n\n// const contacts = localStorage.getItem(\"contacts\");\n// const parsedContacts = JSON.parse(contacts);\n// if (parsedContacts) {\n//   this.setState({ contacts: parsedContacts });\n// }\n\n// componentDidUpdate(prevProps, prevState) {\n//   const nextContacts = this.state.contacts;\n//   const prevContacts = prevState.contacts;\n//   if (nextContacts !== prevContacts) {\n//     localStorage.setItem(\"contacts\", JSON.stringify(nextContacts));\n//   }\n// }\n\n// // Добавляет контакт\n// addContact = (data) => {\n//   const normalizedName = data.name;\n//   // .toLowerCase();\n//   const uniqId = Date.now().toString();\n\n//   // Создает новый контакт с айди из даты\n//   const newContact = {\n//     id: uniqId,\n//     name: normalizedName,\n//     number: data.number,\n//   };\n//   // Проверка на дубликат\n//   const duplicateName = this.state.contacts.find(\n//     (contact) => contact.name === newContact.name\n//   );\n\n//   if (duplicateName) {\n//     alert(`${newContact.name} is already on contacts`);\n//     return;\n//   }\n\n//   this.setState(({ contacts }) => ({\n//     contacts: [newContact, ...contacts],\n//   }));\n// };\n\n// // Следит за полем фильтрации и пишет в стейт\n// changeFilter = (event) => {\n//   this.setState({ filter: event.currentTarget.value });\n// };\n\n// // Фильтрует и возвращает результат фильтра\n// filterContacts = () => {\n//   const { contacts, filter } = this.state;\n\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter((contact) =>\n//     contact.name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n\n// // Удаляет контакт\n// deleteContact = (id) => {\n//   const answer = window.confirm(\"Do you want to delete?\");\n//   if (answer) {\n//     this.setState((prevState) => ({\n//       contacts: prevState.contacts.filter((contact) => contact.id !== id),\n//     }));\n//   }\n// };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nimport \"modern-normalize/modern-normalize.css\";\nimport \"./App.module.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}